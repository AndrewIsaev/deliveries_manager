version: "3.8"

services:

  db:
    image: postgres:15.1-alpine
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    container_name: db
    volumes:
      - pg_dm_data:/var/lib/postgresql/data/
    ports:
      - "5432:5432"
    healthcheck:
      test: pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}
      timeout: 5s
      retries: 5
      interval: 3s

  migrations:
    build:
      context: .
    container_name: migrations
    environment:
      POSTGRES_HOST: db
    env_file:
      - .env
    command: >
      sh -c "./manage.py makemigrations && ./manage.py migrate"
    depends_on:
      db:
        condition: service_healthy

  api:
    build:
      context: .
      dockerfile: "./Dockerfile"
    env_file: .env
    environment:
      POSTGRES_HOST: db
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "8000:8000"
    volumes:
      - ./core:/opt/core
      - ./delivery:/opt/delivery
      - ./delivery_manager:/opt/delivery_manager

volumes:
  pg_dm_data:
